{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Todo","completed","title","userId","id","selectedTodoId","handleChange","className","type","readOnly","checked","classNames","value","onClick","event","TodoList","state","todoId","selectUser","props","setState","todos","this","map","key","React","Component","BASE_URL","todosUrl","userUrl","getUser","fetch","then","response","json","CurrentUser","user","clearUser","clearUserId","data","prevProps","name","email","phone","Object","keys","length","App","selectedUserId","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f09ec7eb.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport function Todo({\n  completed,\n  title,\n  userId,\n  id,\n  selectedTodoId,\n  handleChange,\n}) {\n  return (\n    <li\n      className={completed\n        ? 'TodoList__item TodoList__item--checked'\n        : 'TodoList__item TodoList__item--unchecked'}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={completed}\n        />\n        <p>{title}</p>\n      </label>\n\n      <button\n        className={classNames('TodoList__user-button button', {\n          'TodoList__user-button--selected': selectedTodoId === id,\n        })}\n        type=\"button\"\n        value={userId}\n        onClick={(event) => {\n          handleChange(event, id);\n        }}\n      >\n        User&nbsp;#\n        {userId}\n      </button>\n\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  selectedTodoId: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\n\nexport class TodoList extends React.Component {\n  state = {\n    selectedTodoId: 0,\n  }\n\n  handleChange = (event, todoId) => {\n    const { selectUser } = this.props;\n\n    this.setState({\n      selectedTodoId: todoId,\n    });\n\n    selectUser(event);\n  }\n\n  render() {\n    const { todos } = this.props;\n    const { selectedTodoId } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(({ id, completed, title, userId }) => (\n              <Todo\n                key={id}\n                completed={completed}\n                title={title}\n                userId={userId}\n                id={id}\n                selectedTodoId={selectedTodoId}\n                handleChange={this.handleChange}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = `https://mate-api.herokuapp.com`;\nconst todosUrl = `${BASE_URL}/todos`;\nconst userUrl = `${BASE_URL}/users/`;\n\nexport function getTodos() {\n  return fetch(todosUrl)\n    .then(response => response.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`${userUrl}${userId}`)\n    .then(response => response.json());\n}\n\n// export const request = (url) => {\n//   return fetch(`${BASE_URL}${url}`)\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({\n          user: { ...user.data },\n        });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      getUser(this.props.userId)\n        .then((user) => {\n          this.setState({\n            user: { ...user.data },\n          });\n        });\n    }\n  }\n\n  clearUser = () => {\n    this.setState({\n      user: {},\n    });\n\n    this.props.clearUserId();\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n\n    return (\n      <>\n        {Object.keys(this.state.user).length !== 0 && (\n          <>\n            <div>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={this.clearUser}\n              >\n                Clear\n              </button>\n            </div>\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\">\n                <span>{`Selected user: ${id}`}</span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{name}</h3>\n              <p className=\"CurrentUser__email\">{email}</p>\n              <p className=\"CurrentUser__phone\">{phone}</p>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: [...todos.data],\n        });\n      });\n  }\n\n  selectUser = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      selectedUserId: value,\n    });\n  }\n\n  clearUserId = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUserId={this.clearUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}