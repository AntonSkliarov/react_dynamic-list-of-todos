{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoSearch/TodoSearch.jsx","components/StatusSelect/StatusSelect.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Todo","completed","title","userId","id","selectedTodoId","handleChange","className","type","readOnly","checked","classNames","value","onClick","event","TodoSearch","searchHandler","placeholder","onChange","StatusSelect","selectedOption","handleSelect","defaultValue","TodoList","state","query","target","setState","toLowerCase","this","props","selectedTodos","todos","filter","includes","todo","map","key","React","Component","BASE_URL","todosUrl","userUrl","CurrentUser","user","clearUser","clearUserId","addUser","prevProps","fetch","then","response","json","data","name","email","phone","Object","keys","length","App","selectedUserId","selectUser","todoId","condition","checkFilterCondition","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00ce32a1.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport function Todo({\n  completed,\n  title,\n  userId,\n  id,\n  selectedTodoId,\n  handleChange,\n}) {\n  return (\n    <li\n      className={completed\n        ? 'TodoList__item TodoList__item--checked'\n        : 'TodoList__item TodoList__item--unchecked'}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={completed}\n        />\n        <p>{title}</p>\n      </label>\n\n      <button\n        className={classNames('TodoList__user-button button', {\n          'TodoList__user-button--selected': selectedTodoId === id,\n        })}\n        type=\"button\"\n        value={userId}\n        onClick={(event) => {\n          handleChange(event, id);\n        }}\n      >\n        User&nbsp;#\n        {userId}\n      </button>\n\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  userId: PropTypes.number.isRequired,\n  selectedTodoId: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function TodoSearch({ searchHandler }) {\n  return (\n    <input\n      className=\"TodoList__search\"\n      type=\"text\"\n      placeholder=\"Type search word\"\n      onChange={searchHandler}\n    />\n  );\n}\n\nTodoSearch.propTypes = {\n  searchHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function StatusSelect({ selectedOption, handleSelect }) {\n  return (\n    <select\n      className=\"TodoList__select\"\n      value={selectedOption}\n      onChange={handleSelect}\n    >\n      <option value=\"all\" defaultValue>all</option>\n      <option value=\"active\">active</option>\n      <option value=\"completed\">completed</option>\n    </select>\n  );\n}\n\nStatusSelect.propTypes = {\n  handleSelect: PropTypes.func.isRequired,\n  selectedOption: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\nimport { TodoSearch } from '../TodoSearch/TodoSearch';\nimport { StatusSelect } from '../StatusSelect/StatusSelect';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    selectedOption: '',\n  }\n\n  searchHandler = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      query: value.toLowerCase(),\n    });\n  }\n\n  handleSelect = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      selectedOption: value,\n    });\n  }\n\n  render() {\n    const { query, selectedOption } = this.state;\n    const { selectedTodoId, handleChange, todos } = this.props;\n\n    const searchableTodos = todos.filter(({ title }) => (\n      title.toLowerCase().includes(query)\n    ));\n\n    const selectedTodos = searchableTodos.filter((todo) => {\n      if (selectedOption === 'active') {\n        return todo.completed === false;\n      }\n\n      if (selectedOption === 'completed') {\n        return todo.completed === true;\n      }\n\n      return true;\n    });\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <TodoSearch searchHandler={this.searchHandler} />\n        <StatusSelect\n          selectedOption={selectedOption}\n          handleSelect={this.handleSelect}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {selectedTodos.map(({ id, completed, title, userId }) => (\n              <Todo\n                key={id}\n                completed={completed}\n                title={title}\n                userId={userId}\n                id={id}\n                selectedTodoId={selectedTodoId}\n                handleChange={handleChange}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      title: PropTypes.string.isRequired,\n      userId: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectedTodoId: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","const BASE_URL = `https://mate-api.herokuapp.com`;\nconst todosUrl = `${BASE_URL}/todos`;\nconst userUrl = `${BASE_URL}/users/`;\n\nfunction checkFilterCondition(todo) {\n  let condition = true;\n\n  if (todo.userId === null) {\n    condition = false;\n  }\n\n  if (todo.title === '') {\n    condition = false;\n  }\n\n  if (todo.completed === null) {\n    condition = false;\n  }\n\n  return condition;\n}\n\nexport function getTodos() {\n  return fetch(todosUrl)\n    .then(response => response.json())\n    .then(todos => todos.data\n      .filter(todo => checkFilterCondition(todo)));\n}\n\nexport function getUser(userId) {\n  return fetch(`${userUrl}${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.addUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.addUser();\n    }\n  }\n\n  clearUser = () => {\n    this.setState({\n      user: {},\n    });\n\n    this.props.clearUserId();\n  }\n\n  addUser() {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({\n          user: { ...user.data },\n        });\n      });\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n\n    return (\n      <>\n        {Object.keys(this.state.user).length && (\n          <>\n            <div>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={this.clearUser}\n              >\n                Clear\n              </button>\n            </div>\n            <div className=\"CurrentUser\">\n              <h2 className=\"CurrentUser__title\">\n                <span>{`Selected user: ${id}`}</span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{name}</h3>\n              <p className=\"CurrentUser__email\">{email}</p>\n              <p className=\"CurrentUser__phone\">{phone}</p>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUserId: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    selectedTodoId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: [...todos],\n        });\n      })\n      .catch(() => {\n        this.setState({\n          todos: [],\n        });\n      });\n  }\n\n  selectUser = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      selectedUserId: value,\n    });\n  }\n\n  clearUserId = () => {\n    this.setState({\n      selectedUserId: 0,\n      selectedTodoId: 0,\n    });\n  }\n\n  handleChange = (event, todoId) => {\n    this.setState({\n      selectedTodoId: todoId,\n    });\n\n    this.selectUser(event);\n  }\n\n  render() {\n    const { todos, selectedUserId, selectedTodoId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            handleChange={this.handleChange}\n            selectedTodoId={selectedTodoId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUserId={this.clearUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}